name: Build
on:
  workflow_call:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - run: pip install . \
          git+https://github.com/silnrsi/{sldrtools#sldrtools,palaso-python#palaso} \
          six

    - name: Find latest SLDR dependency
      uses: actions/github-script@v7
      id: find-sldr
      with:
        script: |
          const result = await github.rest.actions
            .listArtifactsForRepo({
              owner: "silnrsi",
              repo: "sldr"
            })
          console.log(result.data.artifacts[0])
          return result.data.artifacts[0]
    - uses: actions/cache@v4
      id: cached-sldr
      with:
        path: |
          unflat
          flat
        key: sldr-${{fromJSON(steps.find-sldr.outputs.result).id}}
    - name: Download and extract SLDR dependency
      if: steps.cached-sldr.outputs.cache-hit != 'true'
      run: |
        wget --quiet --header "Authorization: token ${{secrets.GITHUB_TOKEN}}"  ${{fromJSON(steps.find-sldr.outputs.result).archive_download_url}} -O sldr.zip
        unzip -q sldr.zip
        rm sldr.zip
    
    # Build it
    - name: Generate langtags
      run: |
        make SLDR=unflat FLATDIR=flat build
    - uses: actions/upload-artifact@v4
      with:
        name: langtags
        path: |
          pub/**

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - run: pip install . \
          git+https://github.com/silnrsi/{sldrtools#sldrtools,palaso-python#palaso} \
          six

    - uses: actions/download-artifact@v4
      with:
        name: langtags
        path: pub

    # Test it.
    - name: Test langtags
      id: langtags
      run: |
        python3 -m unittest tests.test_json tests.python.test_python tests.test_basic
        echo "need_commit=$(git diff -wU0 pub/langtags.json | grep '^+ ' | grep -v '\"date\":' | wc -l)" >> $GITHUB_OUTPUT
#    - name: Commit built langtags
#      if: steps.langtags.output.need_commit != 0
#      uses: EndBug/add-and-commit@v5
#      with:
#        message: "GitHub Actions updated pub"
#        add: "pub/*"
#      env:
#        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
