name: Deploy to server
on:
  workflow_call:
    inputs:
      path:
        required: true
        type: string
    secrets:
      uploader_key:
        required: true
      server_address:
        required: true
      repository_dispatch_pat:
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      # Checkout repo for gh cli to function
      - uses: actions/checkout@v4
      # Download the artefact
      - uses: actions/download-artifact@v4
        with:
          name: langtags
          path: pub
      - name: Time based build id
        id: build-id
        run: date --utc +stamp=%g%V%w.%H%M >> $GITHUB_OUTPUT
      - name: Production
        if: ${{ github.ref_name == 'release' }}
        run: >-
          gh release create ${{ steps.build-id.outputs.stamp }}
          --title "Production Language Tags data ${{ steps.build-id.outputs.stamp }}"
          --generate-notes
          --latest
          pub/langtags.*
      - name: Staging
        if: ${{ github.ref_name == 'master' }}
        run: >-
          gh release delete staging -y --cleanup-tag || true;
          gh release create staging
          --title "Staging Language Tags data ${{ steps.build-id.outputs.stamp }}"
          --target master
          --prerelease
          --notes 'The latest in-development version of the Langtags data set. This may invalid or incomplete. Use only for testing.'
          pub/langtags.*

  deploy:
    runs-on: ubuntu-latest
    env:
      RSYNC_OPTS: -aP --no-p --no-g --no-t --compress --del -e "ssh -o StrictHostKeyChecking=no"
    steps:
    # Install our private key for uploading deliverable
    - uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.uploader_key }}
    # Download the artefact
    - uses: actions/download-artifact@v4
      with:
        name: langtags
    # Upload results
    - name: Upload langtags to /sites/s/data/${{ inputs.path }}
      run: rsync ${{env.RSYNC_OPTS}} langtags.{json,txt} ${{ secrets.server_address }}/sites/s/data/${{ inputs.path }}/

  dispatch:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Trigger findafont rebuild
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.repository_dispatch_pat }}
        repository: silnrsi/findafont
        event-type: langtags-deployed
        client-payload: >- 
          {
            "release": "${{ endsWith(github.ref, '/release') }}"
          }
